
package gui;
import java.util.List;
import java.util.ArrayList;
import entidades.Cliente;
import entidades.Cajero;
import entidades.Usuario;
import enums.Accion;
import java.util.stream.Collectors;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import servicios.Registro;



public class RegistroUsuarios extends javax.swing.JFrame {

    private Registro registro = new Registro();
    private boolean tabClientes=true;
    private Accion accionSeleccionada;
    /**
     * Creates new form RegistroUsuarios
     */
    public RegistroUsuarios() {
        initComponents();
    }
    
    public RegistroUsuarios(List<Usuario> usuarios){
        initComponents();
        registro.usuarios = usuarios;
        this.inicializarTabla(this.jTableClientes, registro.verClientes());
        this.inicializarTabla(this.jTableCajeros, registro.verCajeros());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelCliente = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        jLabelIdCliente = new javax.swing.JLabel();
        jLabelNombreCliente = new javax.swing.JLabel();
        jLabelApellidoCliente = new javax.swing.JLabel();
        jTextFieldIdCliente = new javax.swing.JTextField();
        jTextFieldNombreCliente = new javax.swing.JTextField();
        jTextFieldApellidoCliente = new javax.swing.JTextField();
        jPanelCajero = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableCajeros = new javax.swing.JTable();
        jLabelIdCajero = new javax.swing.JLabel();
        jLabelNombreCajero = new javax.swing.JLabel();
        jLabelApellidoCajero = new javax.swing.JLabel();
        jTextFieldIdCajero = new javax.swing.JTextField();
        jTextFieldNombreCajero = new javax.swing.JTextField();
        jTextFieldApellidoCajero = new javax.swing.JTextField();
        jButtonAgregar = new javax.swing.JButton();
        jButtonActualizar = new javax.swing.JButton();
        jButtonBuscar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setName(""); // NOI18N

        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableClientes);

        jLabelIdCliente.setText("ID");

        jLabelNombreCliente.setText("Nombre");

        jLabelApellidoCliente.setText("Apellido");

        javax.swing.GroupLayout jPanelClienteLayout = new javax.swing.GroupLayout(jPanelCliente);
        jPanelCliente.setLayout(jPanelClienteLayout);
        jPanelClienteLayout.setHorizontalGroup(
            jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
            .addGroup(jPanelClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelIdCliente)
                    .addComponent(jLabelNombreCliente)
                    .addComponent(jLabelApellidoCliente))
                .addGap(80, 80, 80)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNombreCliente)
                    .addComponent(jTextFieldIdCliente)
                    .addComponent(jTextFieldApellidoCliente))
                .addContainerGap())
        );
        jPanelClienteLayout.setVerticalGroup(
            jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelClienteLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIdCliente)
                    .addComponent(jTextFieldIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombreCliente)
                    .addComponent(jTextFieldNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelApellidoCliente)
                    .addComponent(jTextFieldApellidoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 51, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Clientes", jPanelCliente);

        jTableCajeros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTableCajeros);

        jLabelIdCajero.setText("ID");

        jLabelNombreCajero.setText("Nombre");

        jLabelApellidoCajero.setText("Apellido");

        jTextFieldIdCajero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdCajeroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCajeroLayout = new javax.swing.GroupLayout(jPanelCajero);
        jPanelCajero.setLayout(jPanelCajeroLayout);
        jPanelCajeroLayout.setHorizontalGroup(
            jPanelCajeroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
            .addGroup(jPanelCajeroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCajeroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelIdCajero)
                    .addComponent(jLabelNombreCajero)
                    .addComponent(jLabelApellidoCajero))
                .addGap(80, 80, 80)
                .addGroup(jPanelCajeroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldIdCajero)
                    .addComponent(jTextFieldNombreCajero)
                    .addComponent(jTextFieldApellidoCajero))
                .addContainerGap())
        );
        jPanelCajeroLayout.setVerticalGroup(
            jPanelCajeroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCajeroLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCajeroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIdCajero)
                    .addComponent(jTextFieldIdCajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanelCajeroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombreCajero)
                    .addComponent(jTextFieldNombreCajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanelCajeroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelApellidoCajero)
                    .addComponent(jTextFieldApellidoCajero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 45, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cajeros", jPanelCajero);

        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });

        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAgregar)
                        .addGap(34, 34, 34)
                        .addComponent(jButtonActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonBuscar)
                        .addGap(40, 40, 40)
                        .addComponent(jButtonEliminar)
                        .addGap(31, 31, 31)
                        .addComponent(jButtonGuardar))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAgregar)
                    .addComponent(jButtonActualizar)
                    .addComponent(jButtonBuscar)
                    .addComponent(jButtonEliminar)
                    .addComponent(jButtonGuardar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldIdCajeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIdCajeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIdCajeroActionPerformed

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        // TODO add your handling code here:
        //Boton AGREGAR
        this.tabClientes=this.jTabbedPane1.getSelectedIndex()<1;
        this.accionSeleccionada=Accion.AGREGAR;
        this.jButtonActualizar.setEnabled(false);
        this.jButtonEliminar.setEnabled(false);
        this.jButtonBuscar.setEnabled(false);
        this.jButtonAgregar.setEnabled(false);
        this.jButtonGuardar.setEnabled(true);
        this.habilitarTodo();
        this.limpiarTodo();
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        // TODO add your handling code here:
        //Boton ACTUALIZAR
        this.tabClientes=this.jTabbedPane1.getSelectedIndex()<1;
        this.accionSeleccionada=Accion.ACTUALIZAR;
        this.jButtonActualizar.setEnabled(false);
        this.jButtonEliminar.setEnabled(false);
        this.jButtonBuscar.setEnabled(false);
        this.jButtonAgregar.setEnabled(false);
        this.jButtonGuardar.setEnabled(true);
        this.habilitarActualizar();
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        //Boton BUSCAR
        this.tabClientes=this.jTabbedPane1.getSelectedIndex()<1;
        this.accionSeleccionada=Accion.BUSCAR;
        this.jButtonActualizar.setEnabled(false);
        this.jButtonEliminar.setEnabled(false);
        this.jButtonBuscar.setEnabled(false);
        this.jButtonAgregar.setEnabled(false);
        this.jButtonGuardar.setEnabled(true);
        this.habilitarTodo();
        this.limpiarTodo();
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        //Boton ELIMINAR
        this.tabClientes=this.jTabbedPane1.getSelectedIndex()<1;
        this.accionSeleccionada=Accion.ELIMINAR;
        this.jButtonActualizar.setEnabled(false);
        this.jButtonEliminar.setEnabled(false);
        this.jButtonBuscar.setEnabled(false);
        this.jButtonAgregar.setEnabled(false);
        this.jButtonGuardar.setEnabled(true);
        this.limpiarEliminar();
        this.habilitarEliminar();
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        // TODO add your handling code here:
        //Boton GUARDAR
        this.tabClientes=this.jTabbedPane1.getSelectedIndex()<1;
        String id;
        String nombre;
        String apellido;
        if(this.tabClientes){
            id=this.jLabelIdCliente.getText();
            nombre=this.jLabelNombreCliente.getText();
            apellido=this.jLabelApellidoCliente.getText();
        }else{
            id=this.jLabelIdCajero.getText();
            nombre=this.jLabelNombreCajero.getText();
            apellido=this.jLabelApellidoCajero.getText();
        }
        switch(this.accionSeleccionada){
            case AGREGAR:
                if(this.tabClientes){
                    this.agregarCliente(id, nombre, apellido);
                }else{
                    this.agregarCajero(id,nombre,apellido);
                }
                break;
                
            case ACTUALIZAR:
                final Usuario usuario=this.buscarUsuario(id);
                if(usuario!=null){
                    usuario.setNombre(nombre);
                    usuario.setApellido(apellido);
                    this.actualizarUsuario(usuario);
                }
                break;
                
            case BUSCAR:
                break;
            
            case ELIMINAR:
                final Usuario usuarioEliminar=this.buscarUsuario(id,nombre,apellido);
                if(usuarioEliminar!=null){
                    this.eliminar(usuarioEliminar);
                }
                break;
            default:
                break;
        }
        this.inicializarTabla(this.jTableClientes,
                registro.verClientes());
        this.inicializarTabla(this.jTableCajeros,
                registro.verCajeros());
        this.deshabilitarTodo();
        this.limpiarTodo();
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JLabel jLabelApellidoCajero;
    private javax.swing.JLabel jLabelApellidoCliente;
    private javax.swing.JLabel jLabelIdCajero;
    private javax.swing.JLabel jLabelIdCliente;
    private javax.swing.JLabel jLabelNombreCajero;
    private javax.swing.JLabel jLabelNombreCliente;
    private javax.swing.JPanel jPanelCajero;
    private javax.swing.JPanel jPanelCliente;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableCajeros;
    private javax.swing.JTable jTableClientes;
    private javax.swing.JTextField jTextFieldApellidoCajero;
    private javax.swing.JTextField jTextFieldApellidoCliente;
    private javax.swing.JTextField jTextFieldIdCajero;
    private javax.swing.JTextField jTextFieldIdCliente;
    private javax.swing.JTextField jTextFieldNombreCajero;
    private javax.swing.JTextField jTextFieldNombreCliente;
    // End of variables declaration//GEN-END:variables


    private void inicializarTabla(final JTable tabla, List<Usuario> usuarios){
        DefaultTableModel modeloDefault = new DefaultTableModel();
        modeloDefault.addColumn("ID");
        modeloDefault.addColumn("Nombre");
        modeloDefault.addColumn("Apellido");
        tabla.setModel(modeloDefault);
        usuarios.forEach(usuario->{
            modeloDefault.addRow(new Object[]{
                usuario.getIdentificacion(),
                usuario.getNombre(),
                usuario.getApellido()});
        });
    }
    
    private void actualizarTabla(final JTable tabla, Usuario usuario){
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.addRow(new Object[]{
            usuario.getIdentificacion(),
            usuario.getNombre(),
            usuario.getApellido()
        });
    }
    
    private void agregarCliente(String id, String nombre, String apellido){
        Cliente cliente = new Cliente(id,nombre,apellido);
        registro.usuarios.add(cliente);
        this.actualizarTabla(this.jTableClientes, cliente);
    }
    
    private void agregarCajero (String id, String nombre, String apellido){
        Cajero cajero = new Cajero(id,nombre,apellido);
        registro.usuarios.add(cajero);
        this.actualizarTabla(this.jTableClientes, cajero);
    }

    private void habilitar(final JTextField campo){
        campo.setEnabled(true);
    }

    private void habilitarTodo(){
        if(this.tabClientes){
            this.habilitar(this.jTextFieldIdCliente);
            this.habilitar(this.jTextFieldNombreCliente);
            this.habilitar(this.jTextFieldApellidoCliente);
        }else{
            this.habilitar(this.jTextFieldIdCajero);
            this.habilitar(this.jTextFieldNombreCajero);
            this.habilitar(this.jTextFieldApellidoCajero);
        }
        this.jButtonGuardar.setEnabled(true);
    }

    private void limpiarTodo(){
        if(this.tabClientes){
            this.limpiar(this.jTextFieldIdCliente);
            this.limpiar(this.jTextFieldNombreCliente);
            this.limpiar(this.jTextFieldApellidoCliente);
        }else{
            this.limpiar(this.jTextFieldIdCajero);
            this.limpiar(this.jTextFieldNombreCajero);
            this.limpiar(this.jTextFieldApellidoCajero);
        }
    }
    
    private void limpiar(final JTextField campo){
        campo.setText("");
    }

    
    private void habilitarActualizar(){
        if(this.tabClientes){
            this.deshabilitar(this.jTextFieldIdCliente);
            this.habilitar(this.jTextFieldNombreCliente);
            this.habilitar(this.jTextFieldApellidoCliente);
        }else{
            this.deshabilitar(this.jTextFieldIdCajero);
            this.habilitar(this.jTextFieldNombreCajero);
            this.habilitar(this.jTextFieldApellidoCajero);
        }
        this.jButtonGuardar.setEnabled(true);
    }
    
    private void deshabilitar(final JTextField campo){
        campo.setEnabled(false);
    }
    
    
    private void limpiarEliminar(){
        if(this.tabClientes){
            this.limpiar(this.jTextFieldNombreCliente);
            this.limpiar(this.jTextFieldApellidoCliente);
        }else{
            this.limpiar(this.jTextFieldNombreCajero);
            this.limpiar(this.jTextFieldApellidoCajero);
        }
    }
    
    private void habilitarEliminar(){
        if(this.tabClientes){
            this.habilitar(this.jTextFieldIdCliente);
            this.deshabilitar(this.jTextFieldNombreCliente);
            this.deshabilitar(this.jTextFieldApellidoCliente);
        }else{
            this.habilitar(this.jTextFieldIdCajero);
            this.deshabilitar(this.jTextFieldNombreCajero);
            this.deshabilitar(this.jTextFieldApellidoCajero);
        }
        this.jButtonGuardar.setEnabled(true);
    }
    
    
    

}
